//$Id: float_test_vector.h,v 1.8 2008/06/06 11:34:45 jmh Exp $
#ifndef FLOAT_TEST_VECTOR_H
#define FLOAT_TEST_VECTOR_H

#ifdef __GNUC__
 #include <config.h>
#endif

#ifdef HAVE_STDINT_H
 #include <stdint.h>
#elif defined(_MSC_VER)
  // Microsoft have their own definition
  typedef   signed __int32  int32_t;
  typedef unsigned __int32 uint32_t;
  typedef   signed __int64  int64_t;
  typedef unsigned __int64 uint64_t;
  typedef unsigned short   uint16_t; 
  typedef short             int16_t;
#else
# ifndef inline
#  define inline __inline
# endif
# if !(defined(__STDC__) && defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 199901L))
   typedef unsigned int uint32_t; 
   typedef int int32_t; 
   typedef unsigned short uint16_t; 
   typedef short int16_t;
# endif
#endif

#define N_TESTS  80

#ifdef __GNUC__
const uint32_t float_test_vector_special[N_TESTS] __attribute__ ((aligned (16))) = 
    { 0x80000000, 0x00000000, 0x3F800000, 0x3F802000, 
      0x3F802000, 0x3F800000, 0x3F802000, 0x3F7FE000, 
      0x3F800000, 0x3F800000, 0x3F7FE000, 0x33800000, 
      0x34000000, 0x34000000, 0x33800000, 0x34000000, 
      0x00000000, 0x33800000, 0x33800000, 0x00000000,
      0x38800000, 0x38802000, 0x38802000, 0x38800000, 
      0x38802000, 0x387FC000, 0x38800000, 0x38800000, 
      0x387FC000, 0x40000000, 0x40400000, 0x41200000, 
      0x3DCCC000, 0x3E4CC000, 0x3E99A000, 0x477FE000, 
      0x7F800000, 0x7F800000, 0x477FE000, 0x7F800000, 
      0x7F800000, 0x7F800000, 0xBF800000, 0xBF802000, 
      0xBF802000, 0xBF800000, 0xBF802000, 0xBF7FE000, 
      0xBF800000, 0xBF800000, 0xBF7FE000, 0xB3800000, 
      0xB4000000, 0xB4000000, 0xB3800000, 0xB4000000, 
      0x00000000, 0xB3800000, 0xB3800000, 0x00000000,
      0xB8800000, 0xB8802000, 0xB8802000, 0xB8800000, 
      0xB8802000, 0xB87FC000, 0xB8800000, 0xB8800000, 
      0xB87FC000, 0xC0000000, 0xC0400000, 0xC1200000, 
      0xBDCCC000, 0xBE4CC000, 0xBE99A000, 0xC77FE000, 
      0xFF800000, 0xFF800000, 0xC77FE000, 0xFF800000 };

const uint16_t half_test_vector_special[N_TESTS] __attribute__ ((aligned (16))) = 
  { 0x8000, 0x0000, 0x3C00, 0x3C01, 0x3C01, 0x3C00, 0x3C01, 0x3BFF, 
    0x3C00, 0x3C00, 0x3BFF, 0x0001, 0x0002, 0x0002, 0x0001, 0x0002, 
    0x0000, 0x0001, 0x0001, 0x0000, 0x0400, 0x0401, 0x0401, 0x0400, 
    0x0401, 0x03FF, 0x0400, 0x0400, 0x03FF, 0x4000, 0x4200, 0x4900, 
    0x2E66, 0x3266, 0x34CD, 0x7BFF, 0x7C00, 0x7C00, 0x7BFF, 0x7C00, 
    0x7C00, 0x7C00, 0xBC00, 0xBC01, 0xBC01, 0xBC00, 0xBC01, 0xBBFF, 
    0xBC00, 0xBC00, 0xBBFF, 0x8001, 0x8002, 0x8002, 0x8001, 0x8002, 
    0x0000, 0x8001, 0x8001, 0x0000, 0x8400, 0x8401, 0x8401, 0x8400, 
    0x8401, 0x83FF, 0x8400, 0x8400, 0x83FF, 0xC000, 0xC200, 0xC900, 
    0xAE66, 0xB266, 0xB4CD, 0xFBFF, 0xFC00, 0xFC00, 0xFBFF, 0xFC00 };

#else

const __declspec(align(16)) uint32_t float_test_vector_special[N_TESTS] = 
    { 0x80000000, 0x00000000, 0x3F800000, 0x3F802000, 
      0x3F802000, 0x3F800000, 0x3F802000, 0x3F7FE000, 
      0x3F800000, 0x3F800000, 0x3F7FE000, 0x33800000, 
      0x34000000, 0x34000000, 0x33800000, 0x34000000, 
      0x00000000, 0x33800000, 0x33800000, 0x00000000,
      0x38800000, 0x38802000, 0x38802000, 0x38800000, 
      0x38802000, 0x387FC000, 0x38800000, 0x38800000, 
      0x387FC000, 0x40000000, 0x40400000, 0x41200000, 
      0x3DCCC000, 0x3E4CC000, 0x3E99A000, 0x477FE000, 
      0x7F800000, 0x7F800000, 0x477FE000, 0x7F800000, 
      0x7F800000, 0x7F800000, 0xBF800000, 0xBF802000, 
      0xBF802000, 0xBF800000, 0xBF802000, 0xBF7FE000, 
      0xBF800000, 0xBF800000, 0xBF7FE000, 0xB3800000, 
      0xB4000000, 0xB4000000, 0xB3800000, 0xB4000000, 
      0x00000000, 0xB3800000, 0xB3800000, 0x00000000,
      0xB8800000, 0xB8802000, 0xB8802000, 0xB8800000, 
      0xB8802000, 0xB87FC000, 0xB8800000, 0xB8800000, 
      0xB87FC000, 0xC0000000, 0xC0400000, 0xC1200000, 
      0xBDCCC000, 0xBE4CC000, 0xBE99A000, 0xC77FE000, 
      0xFF800000, 0xFF800000, 0xC77FE000, 0xFF800000 };

const __declspec(align(16)) uint16_t half_test_vector_special[N_TESTS] = 
  { 0x8000, 0x0000, 0x3C00, 0x3C01, 0x3C01, 0x3C00, 0x3C01, 0x3BFF, 
    0x3C00, 0x3C00, 0x3BFF, 0x0001, 0x0002, 0x0002, 0x0001, 0x0002, 
    0x0000, 0x0001, 0x0001, 0x0000, 0x0400, 0x0401, 0x0401, 0x0400, 
    0x0401, 0x03FF, 0x0400, 0x0400, 0x03FF, 0x4000, 0x4200, 0x4900, 
    0x2E66, 0x3266, 0x34CD, 0x7BFF, 0x7C00, 0x7C00, 0x7BFF, 0x7C00, 
    0x7C00, 0x7C00, 0xBC00, 0xBC01, 0xBC01, 0xBC00, 0xBC01, 0xBBFF, 
    0xBC00, 0xBC00, 0xBBFF, 0x8001, 0x8002, 0x8002, 0x8001, 0x8002, 
    0x0000, 0x8001, 0x8001, 0x0000, 0x8400, 0x8401, 0x8401, 0x8400, 
    0x8401, 0x83FF, 0x8400, 0x8400, 0x83FF, 0xC000, 0xC200, 0xC900, 
    0xAE66, 0xB266, 0xB4CD, 0xFBFF, 0xFC00, 0xFC00, 0xFBFF, 0xFC00 };

#endif

const extern uint32_t float_test_vector_count;

#ifdef __GNUC__  
 const extern uint32_t float_test_vector_big[] __attribute__ ((aligned (16)));
 const extern uint32_t float_test_vector_med[] __attribute__ ((aligned (16)));
 const extern uint32_t float_test_vector_small[] __attribute__ ((aligned (16)));
#else
 const __declspec(align(16)) extern uint32_t float_test_vector_big[];
 const __declspec(align(16)) extern uint32_t float_test_vector_med[];
 const __declspec(align(16)) extern uint32_t float_test_vector_small[];
#endif


#endif /* FLOAT_TEST_VECTOR_H */
